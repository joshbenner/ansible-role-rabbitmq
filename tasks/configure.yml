---
- name: Make sure systemd RabbitMQ service directory exists
  file:
    path: /etc/systemd/system/{{ rabbitmq_service }}.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Check if RabbitMQ service limits changing
  check_mode: yes
  template:
    src: limits.conf.j2
    dest: /etc/systemd/system/{{ rabbitmq_service }}.service.d/limits.conf
  register: _rabbitmq_limits_changing

- name: Check if Erlang Cookie is changing
  check_mode: yes
  copy:
    dest: /var/lib/rabbitmq/.erlang.cookie
    content: "{{ rabbitmq_erlang_cookie }}"
  when: rabbitmq_erlang_cookie is defined
  register: _rabbitmq_cookie_changing

# epmd has to be totally stopped for cookie changes, and the entire service
# needs to be considered down by systemd for limits changes to take effect.
- name: Stop RabbitMQ for fundamental changes
  service:
    name: "{{ rabbitmq_service }}"
    state: stopped
  when: _rabbitmq_cookie_changing.changed or _rabbitmq_limits_changing.changed
  tags:
    # Ansible lint complains when service used in response to changes, saying a
    # handler should be used instead. Well... not so much in this case.
    - skip_ansible_lint

- name: Configure RabbitMQ service limits
  template:
    src: limits.conf.j2
    dest: /etc/systemd/system/{{ rabbitmq_service }}.service.d/limits.conf
    owner: root
    group: root
    mode: 0644

- name: Reload systemd units after change
  systemd:
    daemon_reload: yes
  when: _rabbitmq_limits_changing.changed
  tags:
    - skip_ansible_lint

- name: Set Erlang Cookie
  copy:
    dest: /var/lib/rabbitmq/.erlang.cookie
    content: "{{ rabbitmq_erlang_cookie }}"
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
    mode: 0400
  when: rabbitmq_erlang_cookie is defined

- name: Write RabbitMQ configuration
  template:
    src: rabbitmq.config.j2
    dest: "{{ rabbitmq_config_dir }}/rabbitmq.config"
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
    mode: 0644
  notify: restart rabbitmq

- name: Write RabbitMQ environment
  template:
    src: rabbitmq-env.conf.j2
    dest: "{{ rabbitmq_config_dir }}/rabbitmq-env.conf"
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
    mode: 0644
  notify: restart rabbitmq

- name: Enable RabbitMQ plugins
  rabbitmq_plugin:
    names: "{{ rabbitmq_plugins | join(',') }}"
    state: enabled
    new_only: "{{ not rabbitmq_disable_missing_plugins }}"
  notify: restart rabbitmq

# This is required because rabbitmq_plugins can create a cookie with wrong
# permissions under certain circumstances, and running rabbitmq_plugin as the
# rabbitmq user does not seem work?
- name: Ensure erlang cookie perms
  file:
    path: /var/lib/rabbitmq/.erlang.cookie
    owner: "{{ rabbitmq_user }}"
    group: "{{ rabbitmq_group }}"
    mode: 0400
